{"version":3,"names":[],"mappings":"","sources":["ApiWay.js"],"sourcesContent":["/**\n * @file\n * @copyright  2017 BlueHack Inc.\n * @license    Licensed under MIT.\n *             Github.js is freely distributable.\n */\n/* eslint valid-jsdoc: [\"error\", {\"requireReturnDescription\": false}] */\n\nimport User from './User';\nimport Project from './Project';\nimport Instance from './Instance';\nimport Schedule from './Schedule';\nimport Scheduler from './Scheduler';\n\n/**\n * ApiWay encapsulates the functionality to create various API wrapper objects.\n */\nclass ApiWay {\n   /**\n    * Create a new ApiWay.\n    * @param {Requestable.auth} [auth] - the credentials to authenticate to ApiWay. If auth is\n    *                                  not provided requests will be made unauthenticated\n    * @param {string} [apiBase=https://api.apiway.io] - the base ApiWay API URL\n    */\n   // constructor(auth, apiBase = 'http://api.apiway.io') {\n    constructor(auth, apiBase = 'http://127.0.0.1:3000') {\n      this.__apiBase = apiBase;\n      this.__auth = auth || {};\n   }\n\n   /**\n    * Create a new User wrapper\n    * @param {string} [user] - the name of the user to get information about\n    *                        leave undefined for the authenticated user\n    * @return {User}\n    */\n   getUser(user) {\n      return new User(user, this.__auth, this.__apiBase);\n   }\n\n   /**\n    * Create a new Project wrapper\n    * @param {string} [fullName] - the name of the project to get information about\n    *                        leave undefined for the authenticated user\n    * @return {Project}\n    */\n   getProject(fullName) {\n      return new Project(fullName, this.__auth, this.__apiBase);\n   }\n\n   /**\n    * Create a new Instance wrapper\n    * @param {string} [instance] - the id of the instance to get information about\n    *                        leave undefined for the authenticated user\n    * @return {Instance}\n    */\n   getInstance(instance) {\n      return new Instance(instance, this.__auth, this.__apiBase);\n   }\n\n   /**\n    * Create a new Schedule wrapper\n    * @param {string} [scheduleId] - the id of the instance to get information about\n    *                        leave undefined for the authenticated user\n    * @return {Schedule}\n    */\n   getSchedule(scheduleId) {\n      return new Schedule(scheduleId, this.__auth, this.__apiBase);\n   }\n\n   /**\n    * Create a new Scheduler wrapper\n    * @param {string} [schedulerId] - the id of the instance to get information about\n    *                        leave undefined for the authenticated user\n    * @return {Schedule}\n    */\n   getScheduler(schedulerId) {\n      return new Scheduler(schedulerId, this.__auth, this.__apiBase);\n   }\n}\n\nmodule.exports = ApiWay;\n"],"file":"ApiWay.js"}