{"version":3,"names":[],"mappings":"","sources":["User.js"],"sourcesContent":["/**\n * @file\n * @copyright  2017 BlueHack Inc.\n * @license    Licensed under MIT.\n *             Github.js is freely distributable.\n */\nimport Requestable from './Requestable';\nimport debug from 'debug';\nconst log = debug('apiway:user');\n\n/**\n * A User allows scoping of API requests to a particular ApiWay user.\n */\nclass User extends Requestable {\n   /**\n    * Create a User.\n    * @param {string} [username] - the user to use for user-scoped queries\n    * @param {Requestable.auth} [auth] - information required to authenticate to ApiWay\n    * @param {string} [apiBase=https://api.apiway.io] - the base ApiWay API URL\n    */\n   constructor(username, auth, apiBase) {\n      super(auth, apiBase);\n      this.__user = username;\n   }\n\n   /**\n    * Get the user's profile\n    * @param {string} [userId]\n    * @param {Requestable.callback} [cb] - will receive the list of repositories\n    * @return {Promise} - the promise for the http request\n    */\n   getProfile(userId, cb) {\n     return this._request('GET', `/users/${userId}`, null, cb);\n   }\n\n   /**\n    * Update user's profile (Will create a new user if not exist)\n    * @param {object} options -\n    * @param {Requestable.callback} [cb] - will receive the API response\n    * @return {Promise} - the promise for the http request\n    */\n   updateProfile(options, cb) {\n      return this._request('POST', '/users', options, cb);\n   }\n}\n\nmodule.exports = User;\n"],"file":"User.js"}