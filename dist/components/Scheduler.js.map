{"version":3,"names":[],"mappings":"","sources":["Scheduler.js"],"sourcesContent":["/**\n * @file\n * @copyright  2017 BlueHack Inc.\n * @license    Licensed under MIT.\n *             Github.js is freely distributable.\n */\n\nimport Requestable from './Requestable';\nimport debug from 'debug';\nconst log = debug('apiway:scheduler');\n\n/**\n * A Schedule allows scoping of API requests to a particular ApiWay user.\n */\nclass Scheduler extends Requestable {\n   /**\n    * Create a Schedule.\n    * @param {string} [schedulerId] -\n    * @param {Requestable.auth} [auth] - information required to authenticate to ApiWay\n    * @param {string} [apiBase=https://api.apiway.io] - the base ApiWay API URL\n    */\n   constructor(schedulerId, auth, apiBase) {\n      super(auth, apiBase);\n      this.schedulerId = schedulerId;\n   }\n\n   /**\n    * Create a Scheduler\n    * @param {object} options -\n    * @param {Requestable.callback} [cb] - will receive the API response\n    * @return {Promise} - the promise for the http request\n    */\n   addScheduler(options, cb) {\n      return this._request('POST', '/schedulers', options, cb);\n   }\n\n   /**\n    * Update Scheduler\n    * @param {string} [schedulerId]\n    * @param {object} options -\n    * @param {Requestable.callback} [cb] - will receive the API response\n    * @return {Promise} - the promise for the http request\n    */\n   updateScheduler(schedulerId, options, cb) {\n      return this._request('PUT', `/schedulers/${schedulerId}`, options, cb);\n   }\n\n   /**\n    * Add Schedules\n    * @param {string} [schedulerId]\n    * @param {Requestable.callback} [cb] - will receive the list of repositories\n    * @return {Promise} - the promise for the http request\n    */\n   getScheduler(schedulerId, cb) {\n     return this._request('GET', `/schedulers/${schedulerId}`, null, cb);\n   }\n\n   /**\n    * Get Scheduler list\n    * @param {string} [schedulerId]\n    * @param {object} options -\n    * @param {Requestable.callback} [cb] - will receive the list of repositories\n    * @return {Promise} - the promise for the http request\n    */\n   getSchedulers(options, cb) {\n      return this._request('GET', `/schedulers`, options, cb);\n   }\n\n   /**\n    * Delete a Scheduler\n    * @param {string} [schedulerId]\n    * @param {object} options -\n    * @param {Requestable.callback} [cb] - will receive the API response\n    * @return {Promise} - the promise for the http request\n    */\n   deleteScheduler(schedulerId, options, cb) {\n      return this._request('DELETE', `/schedulers/${schedulerId}`, options, cb);\n   }\n\n   /**\n    * Delete a Schedule in aScheduler\n    * @param {string} [scheduleId]\n    * @param {object} options -\n    * @param {Requestable.callback} [cb] - will receive the API response\n    * @return {Promise} - the promise for the http request\n    */\n   deleteSchedule(scheduleId, options, cb) {\n      return this._request('DELETE', `/schedulers/${scheduleId}`, options, cb);\n   }\n}\n\nmodule.exports = Scheduler;\n"],"file":"Scheduler.js"}